
//Find minimum absent positive number in an array A of +ve integers in O(N)
/*
Method 1 : 
Your usual approach will take O(max A) space 
*/


/*
Method 2 : 
In one sweep,
let current element be a[i], 
if(abs(a[i])<n) { a[a[i]] *= -1; }  
*/
#include <iostream>
using namespace std; 
const int maxn = 1e5 + 10; 
int n,a[maxn];
int main() 
{ 
  int i,j; 
  cin>>n;  
  for(i=1;i<=n;i++) cin>>a[i]; 
  for(i=1;i<=n;i++) 
  {
    j = abs(a[i]); 
    if(j<=n && a[j]>0) a[j] *= -1; 
  }
  //now the first +ve index is ans
  for(i=1;i<=n;i++) 
  {
    if(a[i]>0) {
      cout<<i; 
      break; 
    }
  }
  return 0; 
}


/*
Method 3: 
When array has -ve numbers
In 1 sweep,
swap current number to its correct position,
if number is -ve or >n then ignore
*/

